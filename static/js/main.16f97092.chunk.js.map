{"version":3,"sources":["helpers/boyDog.svg","сomponents/LoginPage/alien.svg","сomponents/ChatPage/RightBar/RightBar.js","reducers/PromiseReducer.js","graphQL/index.js","reducers/searchReducer.js","reducers/index.js","reducers/AuthReducer.js","reducers/chatsReducer.js","actions/index.js","сomponents/ChatPage/ChatList/Modal/Modal.js","saga/index.js","сomponents/ChatPage/ChatList/LeftBarNavigation.js","сomponents/ChatPage/MessageForm/HeaderMessageForm.js","helpers/index.js","сomponents/ChatPage/MessageForm/MessageForm.js","сomponents/ChatPage/ChatList/ChatList.js","сomponents/ChatPage/index.js","сomponents/LoginPage/index.js","сomponents/RegisterPage/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","props","warn","className","actionFetch","key","promise","dispatch","a","status","payload","error","type","resolved","GQL","url","headers","query","variables","fetch","method","Accept","body","JSON","stringify","then","res","json","result","errors","Error","getGQL","Authorization","localStorage","authToken","sagaMiddleware","createSagaMiddleware","reducers","combineReducers","auth","state","action","token","jwt","data","jwt_decode","setItem","chats","message","chat","chatMessages","messages","reduce","list","mes","_id","allchats","search","store","createStore","applyMiddleware","thunk","subscribe","console","log","getState","actionAuthLogin","actionResolved","actionRejected","actionSaveChat","actionCreateMessage","value","text","q","actionAllMessages","Modal","isOpen","loadings","enterLoading","index","newLoadings","setState","setTimeout","this","Fragment","onClick","icon","MenuOutlined","CloseOutlined","loading","CLogoutButton","to","PoweroffOutlined","React","Component","connect","disabled","Button","everySearch","searchCheck","fetchWorker","fetchCheck","rootSaga","delay","ms","Promise","ok","backQuery","$or","login","nick","users","put","UserFind","takeLatest","ChatFind","takeEvery","all","SearchInput","placeholder","onChange","event","target","array","CSearchResult","style","border","map","user","run","owner","___owner","sort","actionChatList","NavigationLeftBar","class","aria-hidden","SearchOutlined","NavigationCenterBar","Pending","src","alt","MainPage","boyDog","socket","io","emit","on","actionSaveMes","Input","handleSubmit","preventDefault","handleValueChange","onSubmit","onMessage","Messages","Object","values","Message","CMessagesList","match","params","CNewMessage","CChatList","title","ChatMain","showWarning","handleToggleClick","bind","prevState","MainBlock","LoginForm","password","alien","UserOutlined","prefix","e","LockOutlined","htmlType","onLogin","sub","href","CLoginForm","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","Registration","Form","useForm","form","name","onFinish","initialValues","residence","scrollToFirstError","Item","label","QuestionCircleOutlined","rules","required","whitespace","hasFeedback","Password","dependencies","getFieldValue","validator","rule","reject","resolve","AuthorizedUser","path","component","exact","AnonUser","Content","logged","App","history","createHistory","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.16f97092.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/boyDog.2ded17b8.svg\";","module.exports = __webpack_public_path__ + \"static/media/alien.80bf226b.svg\";","import React from \"react\";\r\nimport \"../MessageForm/Header.css\";\r\n// import { CMessagesPage } from \"../MessageForm/MessageFormRed\";\r\n\r\nexport const RightBar = (props) => {\r\n  // if (!props.warn) {\r\n  //   return null;\r\n  // }\r\n  return (\r\n    <div>\r\n      <div className=\"block-helper-header\">Slider</div>;\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Nav = (props) => {\r\n  if (!props.warn) {\r\n    return null;\r\n  }\r\n  return(\r\n  <div className=\"block-helper\">-------------------------------------</div>\r\n);\r\n}\r\nexport const All = () => (\r\n  <div className=\"all\">\r\n    {/* <RightBar /> */}\r\n    <Nav />\r\n  </div>\r\n);\r\n","export default function promiseReducer(state, { type, key, ...action }) {\r\n  if (!state) {\r\n    return {};\r\n  }\r\n  if (type === \"PROMISE\") {\r\n    return { ...state, [key]: action };\r\n  }\r\n  return state;\r\n}\r\n\r\nexport const actionFetch = (key, promise) => {\r\n  const actionPending = () => {\r\n    return {\r\n      status: \"PENDING\",\r\n      payload: null,\r\n      error: null,\r\n      type: \"PROMISE\",\r\n      key,\r\n    };\r\n  };\r\n  const actionResolved = (payload) => {\r\n    return { status: \"RESOLVED\", payload, error: null, type: \"PROMISE\", key };\r\n  };\r\n  const actionRejected = (error) => {\r\n    return {\r\n      status: \"REJECTED\",\r\n      payload: null,\r\n      error: error,\r\n      type: \"PROMISE\",\r\n      key,\r\n    };\r\n  };\r\n  return async (dispatch) => {\r\n    //возвращаем функцию.\r\n    dispatch(actionPending());\r\n    try {\r\n      let resolved = await promise;\r\n      dispatch(actionResolved(resolved));\r\n      return resolved;\r\n    } catch (error) {\r\n      dispatch(actionRejected(error));\r\n    }\r\n  };\r\n};\r\n","const getGQL = (url, headers = {}) => async (query = \"\", variables = {}) => {\r\n  const result = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      ...headers,\r\n    },\r\n    body: JSON.stringify({ query, variables }),\r\n  }).then((res) => res.json());\r\n  if (result.errors) throw new Error(result.errors);\r\n  return result;\r\n};\r\n\r\nexport let GQL = getGQL(\"http://chat.fs.a-level.com.ua/graphql\", {\r\n  Authorization: \"Bearer \" + localStorage.authToken,\r\n});\r\n","export const searchReducer = (state, { type, query, result }) => {\r\n  //редьюсер, который просто хранит все action в объекте по имени\r\n  if (!state) return { query: \"\", result: null };\r\n  if (type === \"SEARCH\") return { ...state, query };\r\n  if (type === \"SEARCH_RESULT\") return { ...state, result };\r\n\r\n  return state;\r\n};\r\n","import thunk from \"redux-thunk\";\r\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport authReducer from \"./AuthReducer\";\r\nimport promiseReducer from \"./PromiseReducer\";\r\nimport chatsReducer from \"./chatsReducer\";\r\nimport { searchReducer } from \"./searchReducer\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nexport const sagaMiddleware = createSagaMiddleware();\r\n\r\nconst reducers = combineReducers({\r\n  auth: authReducer,\r\n  promise: promiseReducer,\r\n  chats: chatsReducer,\r\n  search: searchReducer,\r\n});\r\n\r\nexport const store = createStore(\r\n  reducers,\r\n  applyMiddleware(thunk, sagaMiddleware)\r\n);\r\n\r\nstore.subscribe(() => console.log(store.getState()));\r\n\r\n\r\n","import * as jwt_decode from \"jwt-decode\";\r\n\r\nexport default function authReducer(state, action) {\r\n  if (!state) {\r\n    if (!localStorage.authToken) {\r\n      return {};\r\n    } else {\r\n      action.type = \"AUTH_LOGIN\";\r\n      action.token = localStorage.authToken;\r\n    }\r\n  }\r\n\r\n  if (action.type === \"AUTH_LOGIN\") {\r\n    const jwt = action.token;\r\n    const data = jwt_decode(jwt);\r\n    localStorage.setItem(\"authToken\", jwt);\r\n    return { jwt: jwt, data: data };\r\n  }\r\n  if (action.type === \"AUTH_LOGOUT\") {\r\n    localStorage.setItem(\"authToken\", \"\");\r\n    return {};\r\n  }\r\n\r\n  return state;\r\n}\r\n","export default function chatsReducer(state, { type, payload, message }) {\r\n  if (!state) {\r\n    return {};\r\n  }\r\n\r\n  if (type === \"SAVE_CHATS\") {\r\n    for (let chat of payload) {\r\n      var chatMessages = chat.messages.reduce((list, mes) => {\r\n        list[mes._id] = mes;\r\n        return list;\r\n      }, {});\r\n      chat.messages = chatMessages;\r\n    }\r\n    const chats = payload;\r\n    var allchats = chats.reduce((res, chat) => {\r\n      res[chat._id] = chat;\r\n      return res;\r\n    }, {});\r\n\r\n    return {\r\n      ...state,\r\n      ...allchats,\r\n    };\r\n  }\r\n  if (type === \"SAVE_MESSAGE\") {\r\n    if (state[message.chat._id]) {\r\n      var messages = state[message.chat._id].messages;\r\n      state[message.chat._id].messages = {\r\n        ...messages,\r\n        [message._id]: message,\r\n      };\r\n    }\r\n    return {\r\n      ...state,\r\n    };\r\n  }\r\n  return state;\r\n}\r\n","import { actionFetch } from \"../reducers/PromiseReducer\";\r\nimport { GQL } from \"../graphQL\";\r\nimport { store } from \"../reducers\";\r\n\r\nexport const actionAuthLogin = (token) => ({ type: \"AUTH_LOGIN\", token });\r\nexport const actionAuthLogout = () => ({ type: \"AUTH_LOGOUT\" });\r\n\r\nexport const actionSearch = (query) => ({ type: \"SEARCH\", query });\r\nexport const actionSearchResult = (result) => ({\r\n  type: \"SEARCH_RESULT\",\r\n  result,\r\n});\r\n\r\nexport const actionPending = (key, promise) => {\r\n  return {\r\n    status: \"PENDING\",\r\n    payload: null,\r\n    error: null,\r\n    type: \"PROMISE\",\r\n    key,\r\n    promise,\r\n  };\r\n};\r\n\r\nexport const actionResolved = (key, payload) => {\r\n  return { status: \"RESOLVED\", payload, error: null, type: \"PROMISE\", key };\r\n};\r\n\r\nexport const actionRejected = (key, error) => {\r\n  return {\r\n    status: \"REJECTED\",\r\n    payload: null,\r\n    error: error,\r\n    type: \"PROMISE\",\r\n    key,\r\n  };\r\n};\r\n\r\nexport const actionSaveChat = (payload) => ({ type: \"SAVE_CHATS\", payload });\r\nexport const actionSaveMes = (message) => (\r\n  console.log(message),\r\n  {\r\n    type: \"SAVE_MESSAGE\",\r\n    message,\r\n  }\r\n);\r\n\r\nexport function actionChatList() {\r\n  let owner = JSON.stringify([\r\n    { ___owner: \"5e97105693e2915e617c6fc1\" },\r\n    { sort: [{ _id: -1 }] },\r\n  ]);\r\n  return actionPending(\r\n    \"chats\",\r\n    GQL(\r\n      `query ChatF($owner: String){\r\n            ChatFind(query: $owner) {\r\n              _id\r\n              owner {\r\n                login\r\n              }\r\n              title\r\n              members {\r\n                login\r\n              }\r\n              messages {\r\n                _id\r\n                text\r\n                chat {\r\n                  title\r\n                }\r\n                owner {\r\n                  login\r\n                }\r\n              }\r\n            }\r\n          }`,\r\n      { owner: owner }\r\n    )\r\n  );\r\n}\r\n\r\nexport function actionAllMessages(_id) {\r\n  let chat = [{ _id }];\r\n  return async (dispatch) => {\r\n    let allmessages = await dispatch(\r\n      actionFetch(\r\n        \"allmessages\",\r\n        GQL(\r\n          ` query CFO($q: String){\r\n            ChatFindOne(query: $q){\r\n              _id\r\n             \r\n              messages {\r\n                text\r\n                owner {\r\n                  login\r\n                }\r\n              }\r\n            }\r\n          }\r\n          `,\r\n          { q: JSON.stringify(chat) }\r\n        )\r\n      )\r\n    );\r\n  };\r\n}\r\nstore.dispatch(actionAllMessages());\r\n\r\nexport function actionCreateMessage(value) {\r\n  return async (dispatch) => {\r\n    let newmessage = await dispatch(\r\n      actionFetch(\r\n        \"newmessage\",\r\n        GQL(\r\n          `mutation MesRedAll($text: String){\r\n              MessageUpsert (message: {\r\n              text: $text\r\n              chat: {\r\n              _id:\"5ec6589b346e9e2323178740\"\r\n              }\r\n              }){\r\n              _id\r\n              text\r\n              owner {\r\n              login\r\n              }\r\n              }\r\n              }`,\r\n          { text: value }\r\n        )\r\n      )\r\n    );\r\n  };\r\n}\r\n\r\nstore.dispatch(actionCreateMessage());\r\n","import React from \"react\";\r\nimport \"./Modal.css\";\r\nimport { MenuOutlined } from \"@ant-design/icons\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Button } from \"antd\";\r\nimport { PoweroffOutlined, CloseOutlined } from \"@ant-design/icons\";\r\nimport { actionAuthLogout } from \"../../../../actions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport default class Modal extends React.Component {\r\n  state = {\r\n    isOpen: false,\r\n    loadings: [],\r\n  };\r\n\r\n  enterLoading = (index) => {\r\n    const newLoadings = [...this.state.loadings];\r\n    newLoadings[index] = true;\r\n    this.setState({\r\n      loadings: newLoadings,\r\n    });\r\n    setTimeout(() => {\r\n      newLoadings[index] = false;\r\n      this.setState({ loadings: newLoadings });\r\n    }, 6000);\r\n  };\r\n\r\n  render() {\r\n    const { loadings } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Button\r\n          onClick={() => this.setState({ isOpen: true })}\r\n          type=\"primary\"\r\n          icon={<MenuOutlined />}\r\n        />\r\n\r\n        {this.state.isOpen && (\r\n          <div className=\"modal\">\r\n            <div className=\"modal-body\">\r\n              <div className=\"close\">\r\n                {\" \"}\r\n                <Button\r\n                  type=\"primary\"\r\n                  icon={<CloseOutlined />}\r\n                  loading={loadings[2]}\r\n                  onClick={() => this.setState({ isOpen: false })}\r\n                />\r\n              </div>\r\n              <div className=\"modal-user-info\"></div>\r\n              <div className=\"modal-navigation\"></div>\r\n\r\n              <div className=\"modal-about\"></div>\r\n\r\n              <CLogoutButton className=\"ant-btn ant-btn-primary\">\r\n                <Link to=\"/\">\r\n                  <PoweroffOutlined /> Log out\r\n                </Link>\r\n              </CLogoutButton>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst CLogoutButton = connect((state) => ({ disabled: !state.auth.data }), {\r\n  onClick: actionAuthLogout,\r\n})(Button);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { all, takeLatest, takeEvery, put, call } from \"redux-saga/effects\";\r\nimport {\r\n  actionSearch,\r\n  actionSearchResult,\r\n  actionRejected,\r\n  actionResolved,\r\n  actionChatList,\r\n  actionSaveChat,\r\n} from \"../actions\";\r\nimport { sagaMiddleware, store } from \"../reducers\";\r\nimport { GQL } from \"../graphQL\";\r\n\r\nconst delay = (ms) => new Promise((ok) => setTimeout(() => ok(ms), ms));\r\n\r\nfunction* everySearch({ query }) {\r\n  console.log(\"search query started to server\", query);\r\n  console.log(yield delay(2000));\r\n  const backQuery = `/${query}/`; //TODO: разбиение на слова, | для объединения в регулярке\r\n  const users = yield GQL(\r\n    `query User($query: String){\r\n          UserFind(query: $query){\r\n            _id\r\n            login\r\n            nick\r\n          }\r\n        }`,\r\n    {\r\n      query: JSON.stringify([\r\n        { $or: [{ login: backQuery }, { nick: backQuery }] },\r\n      ]),\r\n    }\r\n  );\r\n  yield put(actionSearchResult(users.data.UserFind));\r\n  console.log(\"search query finish\", query);\r\n}\r\n\r\nfunction* searchCheck() {\r\n  //console.log(\"watcher\");\r\n  yield takeLatest(\"SEARCH\", everySearch);\r\n}\r\n\r\nfunction* fetchWorker({ key, promise, status }) {\r\n  if (status === \"PENDING\") {\r\n    try {\r\n      const payload = yield promise\r\n      yield put(actionResolved(key, payload));\r\n      yield put(actionSaveChat(payload.data.ChatFind));\r\n      //yield call(actionSaveChat);\r\n    } catch (error) {\r\n      yield put(actionRejected(key, error));\r\n    }\r\n  }\r\n}\r\n\r\nfunction* fetchCheck() {\r\n  console.log(\"watcher\");\r\n  yield takeEvery(\r\n    \"PROMISE\",\r\n    // ({ type, status }) => type === \"PROMISE\" && status === \"PENDING\",\r\n    fetchWorker\r\n  );\r\n}\r\n\r\nfunction* rootSaga() {\r\n  yield all([searchCheck(), fetchCheck()]);\r\n}\r\nexport const SearchInput = connect(\r\n  ({ search: { query } }) => ({ value: query, placeholder: \"Search...\" }),\r\n  {\r\n    onChange(event) {\r\n      return actionSearch(event.target.value);\r\n    },\r\n  }\r\n)(\"input\");\r\n\r\nconst array = [\r\n  { _id: \"5e25df7f1719bf13be585723\", login: \"test2\", nick: \"\" },\r\n  { _id: \"5e25e0a41719bf13be585729\", login: \"test3\", nick: \"\" },\r\n];\r\n\r\nconst SearchResult = ({ users = array }) => (\r\n  <div style={{ border: \"2px solid black\" }}>\r\n    {users.map((user) => (\r\n      <div key={user._id}>\r\n        <Link to={`/user/${user._id}`}>\r\n          {user.login} ({user.nick})\r\n        </Link>\r\n      </div>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport const CSearchResult = connect(({ search: { result } }) => ({\r\n  users: result || [],\r\n}))(SearchResult);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nstore.dispatch(actionChatList());\r\n","import React from \"react\";\r\nimport \"./ChatList.css\";\r\nimport Modal from \"./Modal/Modal\";\r\n//import { SearchInput } from \"./SearchComponent\";\r\nimport { SearchInput } from \"../../../saga\";\r\nimport { SearchOutlined, UserOutlined } from \"@ant-design/icons\";\r\n\r\nconst NavigationLeftBar = () => (\r\n  <div className=\"block-user-header\">\r\n    <Modal />\r\n    <div>\r\n      <span class=\"fa fa-address-book-o\" aria-hidden=\"true\">\r\n        <SearchOutlined />\r\n      </span>\r\n      <SearchInput className=\"input-search\" />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default NavigationLeftBar;\r\n","import React, { Component } from \"react\";\r\nimport \"./Header.css\";\r\nimport {RightBar} from \"../RightBar/RightBar\"\r\n\r\n\r\nexport const NavigationCenterBar = () => (\r\n  <div className=\"block-chat-header\">\r\n    <div>Name chat</div>\r\n    <div>Menu</div>\r\n   {/* // <Page /> */}\r\n  </div>\r\n);\r\n\r\n// const NavigationBar = (props) => {\r\n//   if (!props.warn) {\r\n//     return null;\r\n//   }\r\n//   return <div className=\"block-bar\">Warning!</div>;\r\n// };\r\n\r\n// class Page extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = { showWarning: false };\r\n//     this.handleToggleClick = this.handleToggleClick.bind(this);\r\n//   }\r\n\r\n//   handleToggleClick() {\r\n//     this.setState((prevState) => ({\r\n//       showWarning: !prevState.showWarning,\r\n//     }));\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <NavigationBar warn={this.state.showWarning} />\r\n//         <button className=\"nav-button\" onClick={this.handleToggleClick}>\r\n//           {this.state.showWarning ? \"Hide\" : \"Show\"}\r\n//         </button>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n","import React from \"react\";\r\nimport boyDog from \"./boyDog.svg\";\r\n//import logo from \"../logo.svg\";\r\nimport \"./index.css\";\r\nimport NavigationLeftBar from \"../сomponents/ChatPage/ChatList/LeftBarNavigation\";\r\nimport { NavigationCenterBar } from \"../сomponents/ChatPage/MessageForm/HeaderMessageForm\";\r\nimport { All } from \"../сomponents/ChatPage/RightBar/RightBar\";\r\n\r\nexport const Pending = () => (\r\n  <img\r\n    src=\"https://flevix.com/wp-content/uploads/2019/07/Spin-Preloader.gif\"\r\n    alt=\"loading\"\r\n  />\r\n);\r\n\r\nexport const MainPage = () => (\r\n  <div className=\"main-page\">\r\n    <img src={boyDog} alt=\"page\" />\r\n    <h3>Please select a chat to start messaging </h3>\r\n  </div>\r\n);\r\n\r\nexport const Header = () => (\r\n  <div className=\"header\">\r\n    <NavigationLeftBar />\r\n    <NavigationCenterBar />\r\n    {/* <RightBar /> */}\r\n \r\n  </div>\r\n);\r\n","import React, { Component, useState, useEffect, useMemo } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport io from \"socket.io-client\";\r\nimport \"./MessageForm.css\";\r\nimport { Pending } from \"../../../helpers\";\r\nimport { actionCreateMessage, actionSaveMes } from \"../../../actions\";\r\nimport { store } from \"../../../reducers\";\r\nimport { CChatList } from \"../ChatList/ChatList\";\r\n\r\nconst socket = io(\"http://chat.fs.a-level.com.ua/\");\r\nif (localStorage.authToken) socket.emit(\"jwt\", localStorage.authToken);\r\n\r\nsocket.on(\"jwt_ok\", (data) => console.log(data));\r\nsocket.on(\"jwt_fail\", (error) => console.log(error));\r\n\r\nsocket.on(\"msg\", (message) => store.dispatch(actionSaveMes(message)));\r\n\r\nconst MessagesList = ({\r\n  chats,\r\n  match: {\r\n    params: { _id },\r\n  },\r\n}) =>\r\n  chats[_id] ? (\r\n    <>\r\n      <div className=\"block-chat-main\">\r\n        <Messages messages={chats[_id].messages} />\r\n        <CNewMessage />\r\n      </div>\r\n    </>\r\n  ) : (\r\n    <Pending />\r\n  );\r\n\r\nclass Input extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: \"\",\r\n    };\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const value = this.state.value;\r\n  };\r\n\r\n  handleValueChange = (event) => {\r\n    this.setState({ value: event.target.value });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <form className=\"chat-message-form\" onSubmit={this.handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Type a message...\"\r\n            value={this.state.value}\r\n            onChange={this.handleValueChange}\r\n            // onKeyPress={(event) => event.key === \"Enter\" ? sendMessage(event) : null }\r\n          />\r\n          <button onClick={() => this.props.onMessage(this.state.value)}>\r\n            Send\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Messages = ({ messages }) =>\r\n  messages ? (\r\n    <>\r\n      <div className=\"chat-message-list\">\r\n        {Object.values(messages).map((message) => (\r\n          <Message message={message} key={message._id} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  ) : (\r\n    <Pending />\r\n  );\r\n\r\nconst Message = ({ message }) => {\r\n  return (\r\n    <div className=\"message\" key={message._id}>\r\n      <div className=\"message-text\">{message.text}</div>\r\n      <div className=\"message-username\">{message.owner.login}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const CMessagesList = connect((state) => ({\r\n  chats: state.chats,\r\n}))(MessagesList);\r\n\r\nexport const CNewMessage = connect(null, { onMessage: actionCreateMessage })(\r\n  Input\r\n);\r\n","import React, { useMemo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./ChatList.css\";\r\nimport { Pending } from \"../../../helpers\";\r\nimport { actionAllMessages, actionChatList } from \"../../../actions\";\r\nimport { MessagesList } from \"../MessageForm/MessageForm\";\r\n\r\nconst ChatList = ({ chats }) =>\r\n  chats ? (\r\n    <>\r\n      {console.log(chats)}\r\n      <div className=\"chats-list\">\r\n        {Object.values(chats).map((chat) => (\r\n          <div className=\"chat\" key={chat._id} chat={chat}>\r\n            <Link to={`/chat/${chat._id}`}>\r\n              {chat.title}\r\n              {/* {chat._id.length > 1 ? `${chat.title}` : null} */}\r\n            </Link>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  ) : (\r\n    <Pending />\r\n  );\r\n\r\nexport const CChatList = connect((state) => ({\r\n  chats: state.chats,\r\n}))(ChatList);\r\n","import React, { Component } from \"react\";\r\nimport \"./index.css\";\r\nimport { Nav } from \"./RightBar/RightBar\";\r\nimport { CChatList } from \"./ChatList/ChatList\";\r\nimport { MainPage, Header } from \"../../helpers\";\r\nimport { CSearchResult } from \"../../saga\";\r\nimport NavigationLeftBar from \"./ChatList/LeftBarNavigation\";\r\nimport { NavigationCenterBar } from \"./MessageForm/HeaderMessageForm\";\r\n\r\nexport class ChatMain extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { showWarning: false };\r\n    this.handleToggleClick = this.handleToggleClick.bind(this);\r\n  }\r\n\r\n  handleToggleClick() {\r\n    this.setState((prevState) => ({\r\n      showWarning: !prevState.showWarning,\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"header\">\r\n          <NavigationLeftBar />\r\n          <NavigationCenterBar />\r\n          <button\r\n            className=\"ant-btn ant-btn-primary ant-btn-icon-only\"\r\n            onClick={this.handleToggleClick}\r\n          >\r\n            {this.state.showWarning ? \">\" : \"<\"}\r\n          </button>\r\n        </div>\r\n        <MainBlock warn={this.state.showWarning} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst MainBlock = ({ warn }) => (\r\n  <main className=\"main-block\">\r\n    <div className=\"block-users-list\">\r\n      <CSearchResult />\r\n      <CChatList />\r\n    </div>\r\n    <div className=\"block-chat\">\r\n      <MainPage />\r\n    </div>\r\n\r\n    <Nav warn={warn} />\r\n  </main>\r\n);\r\n","import { Form, Input, Button } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport React, { Component } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nimport alien from \"./alien.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { actionFetch } from \"../../reducers/PromiseReducer\";\r\nimport { GQL } from \"../../graphQL\";\r\nimport { actionAuthLogin } from \"../../actions\";\r\n\r\nclass LoginForm extends Component {\r\n  state = {\r\n    login: \"\",\r\n    password: \"\",\r\n  };\r\n  render() {\r\n    const valid = true;\r\n\r\n    return (\r\n      <div className=\"main-block\">\r\n        <div className=\"block-login\">\r\n          <form className=\"block-login-form\">\r\n            <img src={alien} alt=\"page\" />\r\n            <h1>Sign in MyChat</h1>\r\n            <div className=\"block-login-form-input\">\r\n              <div>\r\n                <span className=\"form\" aria-hidden=\"true\">\r\n                  <UserOutlined />\r\n                </span>\r\n                <input\r\n                  className=\"ant-input\"\r\n                  value={this.state.login}\r\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                  placeholder=\"Login...\"\r\n                  value={this.state.login}\r\n                  onChange={(e) => this.setState({ login: e.target.value })}\r\n                />\r\n              </div>\r\n              <div>\r\n                <span className=\"form\" aria-hidden=\"true\">\r\n                  <LockOutlined className=\"site-form-item-icon\" />\r\n                </span>\r\n                <input\r\n                  className=\"ant-input\"\r\n                  value={this.state.password}\r\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                  type=\"password\"\r\n                  placeholder=\"Password...\"\r\n                  value={this.state.password}\r\n                  onChange={(e) => this.setState({ password: e.target.value })}\r\n                />\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <div className=\"block-login-button\">\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submilogin-formt\"\r\n              className=\"login-button\"\r\n              onClick={() =>\r\n                this.props.onLogin(this.state.login, this.state.password)\r\n              }\r\n            >\r\n              <Link to=\"/mychat\">Sign in</Link>\r\n            </Button>\r\n            <span>New to MyChat?</span>\r\n            <Button type=\"primary\" htmlType=\"submit\" className=\"registr-button\">\r\n              <Link to=\"/registration\"> Create an account</Link>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport function actionLogin(login, password) {\r\n  return async (dispatch) => {\r\n    let token = await dispatch(\r\n      actionFetch(\r\n        \"login\",\r\n        GQL(\r\n          `query login($login: String, $password: String){\r\n            login(login: $login, password: $password)\r\n        }`,\r\n          { login, password }\r\n        )\r\n      )\r\n    );\r\n\r\n    dispatch(actionAuthLogin(token.data.login));\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  login: state.auth.data && state.auth.data.sub.login,\r\n});\r\n\r\nconst UserName = ({ login }) =>\r\n  login ? <a href=\"/dashboard\">{login}</a> : <span>Anon</span>;\r\n\r\nexport const CUserName = connect(mapStateToProps)(UserName);\r\n\r\nexport const CLoginForm = connect(null, { onLogin: actionLogin })(LoginForm);\r\n\r\n// const CLog = connect((state) => ({ cart: state.cart }), {\r\n//   onLogin: actionAuthLogin,\r\n//   onLogout: actionAuthLogout,\r\n// })(LoginForm);\r\n","import React from \"react\";\r\nimport { Form, Input, Tooltip, Button } from \"antd\";\r\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\r\nimport \"./index.css\";\r\n\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nconst Registration = () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = (values) => {\r\n    console.log(\"Received values of form: \", values);\r\n  };\r\n\r\n  return (\r\n    <div className=\"RegistForm\">\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinish}\r\n        initialValues={{\r\n          residence: [\"zhejiang\", \"hangzhou\", \"xihu\"],\r\n          prefix: \"86\",\r\n        }}\r\n        scrollToFirstError\r\n      >\r\n        <span>Join MyChat</span>\r\n        <h1>Create your account</h1>\r\n        <Form.Item\r\n          name=\"login\"\r\n          label={\r\n            <span>\r\n              Login&nbsp;\r\n              <Tooltip title=\"Your name / nickname for authorization.\">\r\n                <QuestionCircleOutlined />\r\n              </Tooltip>\r\n            </span>\r\n          }\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Login!\",\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your password!\",\r\n            },\r\n          ]}\r\n          hasFeedback\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"Confirm Password\"\r\n          dependencies={[\"password\"]}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please confirm your password!\",\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(rule, value) {\r\n                if (!value || getFieldValue(\"password\") === value) {\r\n                  return Promise.resolve();\r\n                }\r\n\r\n                return Promise.reject(\r\n                  \"The two passwords that you entered do not match!\"\r\n                );\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"nickname\"\r\n          label={\r\n            <span>\r\n              Nickname&nbsp;\r\n              <Tooltip title=\"What do you want others to call you?\">\r\n                <QuestionCircleOutlined />\r\n              </Tooltip>\r\n            </span>\r\n          }\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your nickname!\",\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailFormItemLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Create account\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Registration };\r\n","import React, { Component } from \"react\";\nimport { ChatMain } from \"./сomponents/ChatPage/index\";\nimport { Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport createHistory from \"history/createBrowserHistory\";\nimport { Provider, connect } from \"react-redux\";\nimport { store } from \"./reducers\";\nimport { CLoginForm } from \"./сomponents/LoginPage\";\nimport { Registration } from \"./сomponents/RegisterPage\";\nimport { CMessagesList } from \"./сomponents/ChatPage/MessageForm/MessageForm\";\n\nconst AuthorizedUser = () => (\n  <div>\n    <Switch>\n      {/* <Redirect from='/mychat' to='/' /> */}\n      <Route path=\"/mychat\" component={ChatMain} exact />\n      <Route path=\"/chat/:_id\" component={CMessagesList} exact />\n    </Switch>\n  </div>\n);\nconst AnonUser = () => (\n  <div>\n    <Switch>\n      <Route path=\"/\" component={CLoginForm} exact />\n      <Route path=\"/registration\" component={Registration} exact />\n    </Switch>\n  </div>\n);\n\nconst Content = connect((state) => ({\n  logged: state.auth.jwt,\n}))(({ logged }) => (!logged ? <AnonUser /> : <AuthorizedUser />));\n\nconst App = () => (\n  <Provider store={store}>\n    <Router history={createHistory()}>\n      <Content />\n    </Router>\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}